version: '3'

services:
  rabbitmq:
    container_name: rabbitmq-container
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - user_postgres
      - product_postgres
      - order_mongodb
      - cart_mongodb
      
  user_postgres:
    image: postgres
    container_name: postgres-user-container
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - pg-data:/var/lib/postgresql/user_data
    ports:
      - "5431:5431"

  user_service:
    container_name: user-container
    build:
      context: ..
      dockerfile: /src/user/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8000:8000"


  product_postgres:
    image: postgres
    container_name: postgres-product-container
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - pg-data:/var/lib/postgresql/product_data
    ports:
      - "5432:5432"

  product_service:
    container_name: product-container
    build:
      context: ..
      dockerfile: /src/product/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8001:8000"


  order_mongodb:
    container_name: order-mongodb-container
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=orderdb
      - MONGO_INITDB_ROOT_USERNAME=myuser
      - MONGO_INITDB_ROOT_PASSWORD=mysecretpassword
    volumes:
      - mongo-data:/var/lib/mongodb/order_data
    ports:
      - "5433:5433"
    command:
      mongod --quiet --logpath /dev/null

  order_service:
    container_name: order-container
    build:
      context: ..
      dockerfile: /src/order/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8002:8000"


  cart_mongodb:
    container_name: cart-mongodb-container
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=cartdb
      - MONGO_INITDB_ROOT_USERNAME=myuser
      - MONGO_INITDB_ROOT_PASSWORD=mysecretpassword
    volumes:
      - mongo-data:/var/lib/mongodb/cart_data
    ports:
      - "5434:5434"
    command:
      mongod --quiet --logpath /dev/null

  cart_service:
    container_name: cart-container
    build:
      context: ..
      dockerfile: /src/cart/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8003:8000"

volumes:
  pg-data:
  mongo-data: